
define void @x(i32 %ht, %"%struct._zval_struct"* %return_value, %"%struct._zval_struct"** %return_value_ptr, %"%struct._zval_struct"* %this_ptr, i32 %return_value_used) {
entry:
  %0 = alloca i32
  %1 = alloca %"%struct._zval_struct"*
  %2 = alloca %"%struct._zval_struct"**
  %3 = alloca %"%struct._zval_struct"*
  %4 = alloca i32
  store i32 %ht, i32* %0
  store %"%struct._zval_struct"* %return_value, %"%struct._zval_struct"** %1
  store %"%struct._zval_struct"** %return_value_ptr, %"%struct._zval_struct"*** %2
  store %"%struct._zval_struct"* %this_ptr, %"%struct._zval_struct"** %3
  store i32 %return_value_used, i32* %4
  call void @zephirt_memory_grow_stack()
  %p = alloca %"%struct._zval_struct"*
  store %"%struct._zval_struct"* null, %"%struct._zval_struct"** %p
  %i = alloca i64
  call void @zephirt_memory_alloc(%"%struct._zval_struct"** %p)
  %5 = load %"%struct._zval_struct"** %p
  %6 = getelementptr inbounds %"%struct._zval_struct"* %5, i32 0, i32 2
  store i8 1, i8* %6
  %7 = load %"%struct._zval_struct"** %p
  %8 = getelementptr inbounds %"%struct._zval_struct"* %7, i32 0, i32 0
  %9 = bitcast %"%union._zvalue_value"* %8 to i64*
  store i64 0, i64* %9
  store i64 0, i64* %i
  br label %start-while

start-while:                                      ; preds = %merge-if3, %entry
  %10 = load i64* %i
  %11 = icmp slt i64 %10, 50
  br i1 %11, label %block-while, label %merge-while

block-while:                                      ; preds = %start-while
  %12 = load %"%struct._zval_struct"** %p
  %13 = getelementptr inbounds %"%struct._zval_struct"* %12, i32 0, i32 2
  %14 = load i8* %13
  %15 = zext i8 %14 to i32
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %then, label %else

merge-while:                                      ; preds = %start-while
  %17 = load %"%struct._zval_struct"** %p
  %18 = call i32 @zend_print_zval(%"%struct._zval_struct"* %17, i32 0)
  call void @zephirt_memory_restore_stack()
  ret void

then:                                             ; preds = %block-while
  %19 = load %"%struct._zval_struct"** %p
  %20 = getelementptr inbounds %"%struct._zval_struct"* %19, i32 0, i32 0
  %21 = bitcast %"%union._zvalue_value"* %20 to double*
  %22 = load double* %21
  br label %merge-if

else:                                             ; preds = %block-while
  %23 = load %"%struct._zval_struct"** %p
  %24 = call double @zephir_get_doubleval_ex(%"%struct._zval_struct"* %23)
  br label %merge-if

merge-if:                                         ; preds = %else, %then
  %25 = phi double [ %22, %then ], [ %24, %else ]
  %26 = load i64* %i
  %27 = sitofp i64 %26 to double
  %28 = fadd double %25, %27
  %29 = load %"%struct._zval_struct"** %p
  %30 = icmp ne %"%struct._zval_struct"* %29, null
  br i1 %30, label %then1, label %else2

then1:                                            ; preds = %merge-if
  %31 = load %"%struct._zval_struct"** %p
  %32 = getelementptr inbounds %"%struct._zval_struct"* %31, i32 0, i32 1
  %33 = load i32* %32
  %34 = icmp ugt i32 %33, 1
  br i1 %34, label %then4, label %else5

else2:                                            ; preds = %merge-if
  call void @zephirt_memory_alloc(%"%struct._zval_struct"** %p)
  br label %merge-if3

merge-if3:                                        ; preds = %else2, %merge-if6
  %35 = load %"%struct._zval_struct"** %p
  %36 = getelementptr inbounds %"%struct._zval_struct"* %35, i32 0, i32 2
  store i8 2, i8* %36
  %37 = load %"%struct._zval_struct"** %p
  %38 = getelementptr inbounds %"%struct._zval_struct"* %37, i32 0, i32 0
  %39 = bitcast %"%union._zvalue_value"* %38 to double*
  store double %28, double* %39
  %40 = load i64* %i
  %41 = add nsw i64 %40, 1
  store i64 %41, i64* %i
  br label %start-while

then4:                                            ; preds = %then1
  %42 = load %"%struct._zval_struct"** %p
  %43 = getelementptr inbounds %"%struct._zval_struct"* %42, i32 0, i32 1
  %44 = load i32* %43
  %45 = add i32 %44, -1
  store i32 %45, i32* %43
  %46 = load %"%struct._zval_struct"** %p
  %47 = getelementptr inbounds %"%struct._zval_struct"* %46, i32 0, i32 1
  store i32 1, i32* %47
  %48 = load %"%struct._zval_struct"** %p
  %49 = getelementptr inbounds %"%struct._zval_struct"* %48, i32 0, i32 3
  store i8 0, i8* %49
  br label %merge-if6

else5:                                            ; preds = %then1
  %50 = load %"%struct._zval_struct"** %p
  %51 = call i8* @zval_dtor(%"%struct._zval_struct"* %50)
  br label %merge-if6

merge-if6:                                        ; preds = %else5, %then4
  %52 = load %"%struct._zval_struct"** %p
  %53 = getelementptr inbounds %"%struct._zval_struct"* %52, i32 0, i32 2
  store i8 0, i8* %53
  br label %merge-if3
}

